from enaml.layout.api import hbox
from enaml.core.include import Include
from enaml.widgets.api import (
    DockPane, Container, Label, Field, Form, PushButton, Separator, VGroup, HGroup, SpinBox
)


enamldef ObsConnection(Container):
    attr obs

    padding = 2
    constraints = [
        hbox(lang_label, host_field, port_field, add_button),
        lang_label.width == 15,
        host_field.width == 80,
        port_field.width == 55,
        add_button.width == 65
    ]
    background << "green" if obs.is_connected and obs.is_stream_started else ""
    Label: lang_label:
        text << obs.lang_code
    Field: host_field:
        placeholder = "Host"
        text := obs.host
        enabled << True if not obs.is_connected else False
    SpinBox: port_field:
        minimum = 4444
        maximum = 4464
        value := obs.port
        enabled << True if not obs.is_connected else False
    PushButton: add_button:
        text << "Connect" if not obs.is_connected else "Disc.."
        checkable = True
        checked << obs.is_connected
        clicked ::
            if not obs.is_connected:
                obs.connect()
            else:
                obs.disconnect()


enamldef ObsConnectionManager(DockPane):
    attr obs_manager
    title = "OBS Connections"
    closable = False

    Form:
        padding = 5
        VGroup:
            Include: inc:
                objects << [
                    ObsConnection(obs=obs)
                    for obs in obs_manager.obs_instances
                ]
            Separator:
                 pass
            HGroup:
                PushButton:
                    text = "Add"
                    clicked ::
                        obs_manager.add_obs_instance()
                        obs_manager.status = "New connection added!"
                PushButton:
                    text = "Remove"
                    clicked ::
                        obs_manager.pop_obs_instance()
                        obs_manager.status = "Last connection removed!"
